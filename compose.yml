services:
  api:
    build:
      context: .
      dockerfile: ./docker/dev/golang/Dockerfile
    restart: unless-stopped
    container_name: fd-api
    command: wgo run main.go gin-server
    stdin_open: true
    tty: true
    env_file:
      - path: ./.env
      - path: ./.env.local
        required: false
    environment:
      DB_HOST: "postgres"
    ports:
      - 5000:5000
    volumes:
      - ./api:/usr/src/app
    depends_on:
      - postgres
    healthcheck:
      test: curl --silent --fail http://localhost:5000/healthz || exit 1
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 60s

  postgres:
    image: postgres:16
    restart: unless-stopped
    container_name: fd-postgres
    environment:
      POSTGRES_USER: "${DB_USER:?err}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:?err}"
      POSTGRES_DB: '${DB_NAME:?err}'
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${DB_USER} -d ${DB_PASSWORD}'
        ]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 60s

  adminer:
    image: adminer:latest
    container_name: fd-adminer
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - api
      - postgres

  # Uncomment to use Flutter
  # mobile:
  #   container_name: fd-mobile
  #   build:
  #     context: .
  #     dockerfile: ./docker/dev/flutter/Dockerfile
  #   network_mode: host
  #   ports:
  #     - 5037:5037
  #   privileged: true
  #   volumes:
  #     - /app/.dart_tool
  #     - /app/build
  #     - ./mobile:/app
  #     - /dev/bus/usb:/dev/bus/usb
