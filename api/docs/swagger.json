{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for For Democracy",
        "title": "For Democracy API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Support Team",
            "email": "support@for-democracy"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/events": {
            "get": {
                "description": "Get all events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get all events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Event"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/features": {
            "get": {
                "description": "Get features",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "features"
                ],
                "summary": "Get features",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Feature"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "description": "Get groups",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Get groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Group"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Create a new group",
                "parameters": [
                    {
                        "description": "Group object that needs to be created",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.Group"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/join": {
            "post": {
                "description": "Join a group with code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Join a group with code",
                "parameters": [
                    {
                        "description": "Code to join",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.GroupCode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.GroupUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "description": "Get a group by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Get a group by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Update a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Properties to update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.GroupUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Delete a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/{id}/join": {
            "post": {
                "description": "Join a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Join a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.GroupUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/{id}/leave": {
            "post": {
                "description": "Leave a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Leave a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/missions": {
            "post": {
                "description": "Create a mission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Create a mission",
                "parameters": [
                    {
                        "description": "Mission object that needs to be created",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.Mission"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/validators.Mission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/missions/{id}": {
            "get": {
                "description": "Get mission by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Get mission by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Mission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a mission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Update a mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mission properties that needs to be updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.Mission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/validators.Mission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a mission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Delete a mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/missions/{id}/join": {
            "post": {
                "description": "Join a mission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Join a mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mission properties that needs to be updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validators.UserMission"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.GroupUserMission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/missions/{id}/leave": {
            "post": {
                "description": "Leave a mission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Leave a mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth/logout/{provider}": {
            "get": {
                "description": "Route used to log the user out",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Log the user out",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider name",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth/me": {
            "get": {
                "description": "Route used to get the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get the user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Me"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth/{provider}": {
            "get": {
                "description": "Route used to authenticate the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider name",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/goth.User"
                        }
                    }
                }
            }
        },
        "/oauth/{provider}/callback": {
            "get": {
                "description": "Route used by the provide to send the user back after authentication",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get the user after authentication is complete from the provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider name",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/goth.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/objectifs": {
            "get": {
                "description": "Get all objectifs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objectifs"
                ],
                "summary": "Get all objectifs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Objective"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/objectifs/{name}": {
            "get": {
                "description": "Get an objectif",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objectifs"
                ],
                "summary": "Get an objectif",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Objectif name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Objective"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/planets": {
            "get": {
                "description": "Get all planets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planets"
                ],
                "summary": "Get all planets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Planet"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        },
        "/planets-event": {
            "get": {
                "description": "Get all planets with events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planets"
                ],
                "summary": "Get all planets with events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Planet"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        },
        "/planets-stream/": {
            "get": {
                "description": "Get planets stream",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stream"
                ],
                "summary": "Get planets stream",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Planet"
                            }
                        }
                    }
                }
            }
        },
        "/planets/{id}": {
            "get": {
                "description": "Get planet by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planets"
                ],
                "summary": "Get planet by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Planet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Planet"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        },
        "/stratagems": {
            "get": {
                "description": "Get all stratagems",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stratagems"
                ],
                "summary": "Get all stratagems",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Stratagem"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stratagems/{id}": {
            "get": {
                "description": "Get a stratagem",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stratagems"
                ],
                "summary": "Get a stratagem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stratagem ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Stratagem"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Feature"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "enum.Difficulty": {
            "type": "string",
            "enum": [
                "trivial",
                "easy",
                "medium",
                "challenging",
                "hard",
                "extreme",
                "suicide_mission",
                "impossible",
                "helldive"
            ],
            "x-enum-varnames": [
                "Trivial",
                "Easy",
                "Medium",
                "Challenging",
                "Hard",
                "Extreme",
                "SuicideMission",
                "Impossible",
                "Helldive"
            ]
        },
        "enum.Faction": {
            "type": "string",
            "enum": [
                "humans",
                "terminids",
                "automatons",
                "illuminates"
            ],
            "x-enum-varnames": [
                "Humans",
                "Terminids",
                "Automatons",
                "Illuminates"
            ]
        },
        "enum.ObjectiveType": {
            "type": "string",
            "enum": [
                "terminate_illegal_broadcast",
                "pump_fuel_to_icbm",
                "upload_escape_pod_data",
                "conduct_geological_survey",
                "launch_icbm",
                "retrieve_valuable_data",
                "emergency_evacuation",
                "spread_democracy",
                "eliminate_brood_commanders",
                "purge_hatcheries",
                "activate_e710_pumps",
                "nuke_nursery",
                "activate_terminid_control_system",
                "blitz_search_and_destroy_terminids",
                "eliminate_chargers",
                "eradicate_terminid_swarm",
                "eliminate_bile_titans",
                "enable_e710_extraction",
                "eliminate_devastators",
                "eliminate_automaton_hulks",
                "sabotage_supply_bases",
                "destroy_transmission_network",
                "eradicate_automaton_forces",
                "blitz_search_and_destroy_automatons",
                "sabotage_air_base",
                "eliminate_automaton_factory_strider",
                "destroy_command_bunkers"
            ],
            "x-enum-varnames": [
                "TerminateIllegalBroadcast",
                "PumpFuelToICBM",
                "UploadEscapePodData",
                "ConductGeologicalSurvey",
                "LaunchICBM",
                "RetrieveValuableData",
                "EmergencyEvacuation",
                "SpreadDemocracy",
                "EliminateBroodCommanders",
                "PurgeHatcheries",
                "ActivateE710Pumps",
                "NukeNursery",
                "ActivateTerminidControlSystem",
                "BlitzSearchAndDestroyTerminids",
                "EliminateChargers",
                "EradicateTerminidSwarm",
                "EliminateBileTitans",
                "EnableE710Extraction",
                "EliminateDevastators",
                "EliminateAutomatonHulks",
                "SabotageSupplyBases",
                "DestroyTransmissionNetwork",
                "EradicateAutomatonForces",
                "BlitzSearchAndDestroyAutomatons",
                "SabotageAirBase",
                "EliminateAutomatonFactoryStrider",
                "DestroyCommandBunkers"
            ]
        },
        "enum.Role": {
            "type": "string",
            "enum": [
                "admin",
                "user"
            ],
            "x-enum-varnames": [
                "Admin",
                "User"
            ]
        },
        "enum.StratagemKeys": {
            "type": "string",
            "enum": [
                "up",
                "right",
                "down",
                "left"
            ],
            "x-enum-varnames": [
                "Up",
                "Right",
                "Down",
                "Left"
            ]
        },
        "enum.StratagemType": {
            "type": "string",
            "enum": [
                "supply",
                "mission",
                "defensive",
                "offensive"
            ],
            "x-enum-varnames": [
                "Supply",
                "Mission",
                "Defensive",
                "Offensive"
            ]
        },
        "enum.StratagemUseType": {
            "type": "string",
            "enum": [
                "self",
                "team",
                "shared"
            ],
            "x-enum-varnames": [
                "Self",
                "Team",
                "Shared"
            ]
        },
        "gin.Error": {
            "type": "object",
            "properties": {
                "err": {},
                "meta": {},
                "type": {
                    "$ref": "#/definitions/gin.ErrorType"
                }
            }
        },
        "gin.ErrorType": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                4611686018427387904,
                1,
                2,
                -1
            ],
            "x-enum-varnames": [
                "ErrorTypeBind",
                "ErrorTypeRender",
                "ErrorTypePrivate",
                "ErrorTypePublic",
                "ErrorTypeAny"
            ]
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "goth.User": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accessTokenSecret": {
                    "type": "string"
                },
                "avatarURL": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "idtoken": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "rawData": {
                    "type": "object",
                    "additionalProperties": true
                },
                "refreshToken": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "model.Biome": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "planets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Planet"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Defence": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "defenceHealthHistories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DefenceHealthHistory"
                    }
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "endAt": {
                    "type": "string"
                },
                "enemyFaction": {
                    "$ref": "#/definitions/enum.Faction"
                },
                "health": {
                    "type": "integer"
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "impactPerHour": {
                    "type": "number"
                },
                "maxHealth": {
                    "type": "integer"
                },
                "planet": {
                    "$ref": "#/definitions/model.Planet"
                },
                "planetID": {
                    "type": "integer"
                },
                "players": {
                    "type": "integer"
                },
                "startAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.DefenceHealthHistory": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "defence": {
                    "$ref": "#/definitions/model.Defence"
                },
                "defenceID": {
                    "type": "integer"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "health": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Effect": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "planets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Planet"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Feature": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Group": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "$ref": "#/definitions/enum.Difficulty"
                },
                "groupUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GroupUser"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "missions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Mission"
                    }
                },
                "name": {
                    "type": "string"
                },
                "planet": {
                    "$ref": "#/definitions/model.Planet"
                },
                "planetID": {
                    "type": "integer"
                },
                "public": {
                    "type": "boolean"
                },
                "startAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.GroupUser": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "groupID": {
                    "type": "integer"
                },
                "groupUserMissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GroupUserMission"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "owner": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "model.GroupUserMission": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "groupUserID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "missionID": {
                    "type": "integer"
                },
                "stratagems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Stratagem"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Liberation": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "health": {
                    "type": "integer"
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "impactPerHour": {
                    "type": "number"
                },
                "liberationHealthHistories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LiberationHealthHistory"
                    }
                },
                "planet": {
                    "$ref": "#/definitions/model.Planet"
                },
                "planetID": {
                    "type": "integer"
                },
                "players": {
                    "type": "integer"
                },
                "regenerationPerHour": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.LiberationHealthHistory": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "health": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "liberation": {
                    "$ref": "#/definitions/model.Liberation"
                },
                "liberationID": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Mission": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "groupID": {
                    "type": "integer"
                },
                "groupUserMissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GroupUserMission"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "instructions": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "objectiveTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/enum.ObjectiveType"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Objective": {
            "type": "object",
            "properties": {
                "difficulties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/enum.Difficulty"
                    }
                },
                "factions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/enum.Faction"
                    }
                },
                "missionTime": {
                    "$ref": "#/definitions/time.Duration"
                },
                "objectiveType": {
                    "$ref": "#/definitions/enum.ObjectiveType"
                }
            }
        },
        "model.Planet": {
            "type": "object",
            "properties": {
                "backgroundURL": {
                    "type": "string"
                },
                "biome": {
                    "$ref": "#/definitions/model.Biome"
                },
                "biomeID": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "defence": {
                    "$ref": "#/definitions/model.Defence"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "disabled": {
                    "type": "boolean"
                },
                "effects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Effect"
                    }
                },
                "group": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Group"
                    }
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "imageURL": {
                    "type": "string"
                },
                "initialOwner": {
                    "$ref": "#/definitions/enum.Faction"
                },
                "liberation": {
                    "$ref": "#/definitions/model.Liberation"
                },
                "maxHealth": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/enum.Faction"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                },
                "sector": {
                    "$ref": "#/definitions/model.Sector"
                },
                "sectorID": {
                    "type": "integer"
                },
                "statistic": {
                    "$ref": "#/definitions/model.Statistic"
                },
                "updatedAt": {
                    "type": "string"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Waypoint"
                    }
                }
            }
        },
        "model.Sector": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "planets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Planet"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Statistic": {
            "type": "object",
            "properties": {
                "accuracy": {
                    "type": "number"
                },
                "automatonKills": {
                    "type": "integer"
                },
                "bugKills": {
                    "type": "integer"
                },
                "bulletsFired": {
                    "type": "integer"
                },
                "bulletsHit": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deaths": {
                    "type": "integer"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "friendlyKills": {
                    "type": "integer"
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "illuminateKills": {
                    "type": "integer"
                },
                "missionSuccessRate": {
                    "type": "number"
                },
                "missionTime": {
                    "type": "integer"
                },
                "missionsLost": {
                    "type": "integer"
                },
                "missionsWon": {
                    "type": "integer"
                },
                "planet": {
                    "$ref": "#/definitions/model.Planet"
                },
                "planetID": {
                    "type": "integer"
                },
                "revives": {
                    "type": "integer"
                },
                "timePlayed": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Stratagem": {
            "type": "object",
            "properties": {
                "activation": {
                    "type": "integer"
                },
                "codeName": {
                    "type": "string"
                },
                "cooldown": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "groupUserMissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GroupUserMission"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "imageURL": {
                    "type": "string"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/enum.StratagemKeys"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/enum.StratagemType"
                },
                "updatedAt": {
                    "type": "string"
                },
                "useCount": {
                    "type": "integer"
                },
                "useType": {
                    "$ref": "#/definitions/enum.StratagemUseType"
                }
            }
        },
        "model.Token": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "avatarUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "groupUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GroupUser"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/enum.Role"
                },
                "steamId": {
                    "type": "string"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Token"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Waypoint": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "server.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "server.Event": {
            "type": "object",
            "properties": {
                "defence": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Defence"
                    }
                },
                "liberation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Liberation"
                    }
                }
            }
        },
        "server.Me": {
            "type": "object",
            "properties": {
                "AvatarUrl": {
                    "type": "string"
                },
                "SteamId": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            }
        },
        "server.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        },
        "validators.Group": {
            "type": "object",
            "required": [
                "difficulty",
                "name",
                "planetId",
                "public",
                "startAt"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "$ref": "#/definitions/enum.Difficulty"
                },
                "name": {
                    "type": "string"
                },
                "planetId": {
                    "type": "integer"
                },
                "public": {
                    "type": "boolean"
                },
                "startAt": {
                    "type": "string",
                    "default": "2024-08-02 15:04:05"
                }
            }
        },
        "validators.GroupCode": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "validators.GroupUpdate": {
            "type": "object",
            "required": [
                "difficulty",
                "name",
                "public",
                "startAt"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "$ref": "#/definitions/enum.Difficulty"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "startAt": {
                    "type": "string",
                    "default": "2024-08-02 15:04:05"
                }
            }
        },
        "validators.Mission": {
            "type": "object",
            "required": [
                "name",
                "objectiveTypes"
            ],
            "properties": {
                "groupID": {
                    "type": "integer"
                },
                "instructions": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "objectiveTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/enum.ObjectiveType"
                    }
                }
            }
        },
        "validators.UserMission": {
            "type": "object",
            "required": [
                "stratagems"
            ],
            "properties": {
                "stratagems": {
                    "type": "array",
                    "maxItems": 4,
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}