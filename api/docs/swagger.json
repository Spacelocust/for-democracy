{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for For Democracy",
        "title": "For Democracy API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Support Team",
            "email": "support@for-democracy"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/events": {
            "get": {
                "description": "Get all events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get all events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Event"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        },
        "/oauth/logout/{provider}": {
            "get": {
                "description": "Route used to log the user out",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Log the user out",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider name",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        },
        "/oauth/me": {
            "get": {
                "description": "Route used to get the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get the user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Me"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        },
        "/oauth/{provider}": {
            "get": {
                "description": "Route used to authenticate the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate the user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/goth.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        },
        "/oauth/{provider}/callback": {
            "get": {
                "description": "Route used by the provide to send the user back after authentication",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get the user after authentication is complete from the provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider name",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/goth.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        },
        "/planets": {
            "get": {
                "description": "Get all planets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planets"
                ],
                "summary": "Get all planets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Planet"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        },
        "/planets/{id}": {
            "get": {
                "description": "Get planet by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planets"
                ],
                "summary": "Get planet by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Planet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Planet"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "enum.Faction": {
            "type": "string",
            "enum": [
                "humans",
                "terminids",
                "automatons",
                "illuminates"
            ],
            "x-enum-varnames": [
                "Humans",
                "Terminids",
                "Automatons",
                "Illuminates"
            ]
        },
        "gin.Error": {
            "type": "object",
            "properties": {
                "err": {},
                "meta": {},
                "type": {
                    "$ref": "#/definitions/gin.ErrorType"
                }
            }
        },
        "gin.ErrorType": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                4611686018427387904,
                1,
                2,
                -1
            ],
            "x-enum-varnames": [
                "ErrorTypeBind",
                "ErrorTypeRender",
                "ErrorTypePrivate",
                "ErrorTypePublic",
                "ErrorTypeAny"
            ]
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "goth.User": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accessTokenSecret": {
                    "type": "string"
                },
                "avatarURL": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "idtoken": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "rawData": {
                    "type": "object",
                    "additionalProperties": true
                },
                "refreshToken": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "model.Biome": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "planets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Planet"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Defence": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "endAt": {
                    "type": "string"
                },
                "enemyFaction": {
                    "$ref": "#/definitions/enum.Faction"
                },
                "health": {
                    "type": "integer"
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "maxHealth": {
                    "type": "integer"
                },
                "planet": {
                    "$ref": "#/definitions/model.Planet"
                },
                "planetID": {
                    "type": "integer"
                },
                "players": {
                    "type": "integer"
                },
                "startAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Effect": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "planets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Planet"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Liberation": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "health": {
                    "type": "integer"
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "planet": {
                    "$ref": "#/definitions/model.Planet"
                },
                "planetID": {
                    "type": "integer"
                },
                "players": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Planet": {
            "type": "object",
            "properties": {
                "backgroundURL": {
                    "type": "string"
                },
                "biome": {
                    "$ref": "#/definitions/model.Biome"
                },
                "biomeID": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "defence": {
                    "$ref": "#/definitions/model.Defence"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "disabled": {
                    "type": "boolean"
                },
                "effects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Effect"
                    }
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "imageURL": {
                    "type": "string"
                },
                "initialOwner": {
                    "$ref": "#/definitions/enum.Faction"
                },
                "liberation": {
                    "$ref": "#/definitions/model.Liberation"
                },
                "maxHealth": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/enum.Faction"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                },
                "regeneration": {
                    "type": "integer"
                },
                "sector": {
                    "$ref": "#/definitions/model.Sector"
                },
                "sectorID": {
                    "type": "integer"
                },
                "statistic": {
                    "$ref": "#/definitions/model.Statistic"
                },
                "updatedAt": {
                    "type": "string"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Waypoint"
                    }
                }
            }
        },
        "model.Sector": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "planets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Planet"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Statistic": {
            "type": "object",
            "properties": {
                "accuracy": {
                    "type": "integer"
                },
                "automatonKills": {
                    "type": "integer"
                },
                "bugKills": {
                    "type": "integer"
                },
                "bulletsFired": {
                    "type": "integer"
                },
                "bulletsHit": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deaths": {
                    "type": "integer"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "friendlyKills": {
                    "type": "integer"
                },
                "helldiversID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "illuminateKills": {
                    "type": "integer"
                },
                "missionSuccessRate": {
                    "type": "integer"
                },
                "missionTime": {
                    "type": "integer"
                },
                "missionsWon": {
                    "type": "integer"
                },
                "planet": {
                    "$ref": "#/definitions/model.Planet"
                },
                "planetID": {
                    "type": "integer"
                },
                "revives": {
                    "type": "integer"
                },
                "timePlayed": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Waypoint": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "server.Event": {
            "type": "object",
            "properties": {
                "defence": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Defence"
                    }
                },
                "liberation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Liberation"
                    }
                }
            }
        },
        "server.Me": {
            "type": "object",
            "properties": {
                "AvatarUrl": {
                    "type": "string"
                },
                "SteamId": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            }
        }
    }
}