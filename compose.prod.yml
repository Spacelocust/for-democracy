services:
  api:
    image: spacelocust/fd-api:latest
    restart: unless-stopped
    container_name: fd-api
    environment:
      DB_USER: "${DB_USER:?err}"
      DB_PASSWORD: "${DB_PASSWORD:?err}"
      DB_NAME: "${DB_NAME:?err}"
      DB_HOST: "${DB_HOST:?err}"
      DB_URL: "${DB_URL:?err}"
      JWT_SECRET: "${JWT_SECRET:?err}"
      API_SECRET: "${API_SECRET:?err}"
      API_ENV: "${API_ENV:?err}"
      API_PORT: "${API_PORT:?err}"
      API_DOMAIN: "${API_DOMAIN:?err}"
      API_BASE_URL: "${API_BASE_URL:?err}"
      API_CORS_ORIGIN: "${API_CORS_ORIGIN:?err}"
      GOOGLE_APPLICATION_CREDENTIALS: "${GOOGLE_APPLICATION_CREDENTIALS:?err}"
      STEAM_KEY: "${STEAM_KEY:?err}"
      HELLHUB_API_URL: "${HELLHUB_API_URL:?err}"
      HELLDIVERS_API_URL: "${HELLDIVERS_API_URL:?err}"
    stdin_open: true
    tty: true
    volumes:
      - "./firebase:/firebase"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl --silent --fail http://localhost:5000/healthz || exit 1
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 60s

  migrations:
    image: spacelocust/fd-migrations:latest
    restart: "no"
    container_name: fd-migrations
    environment:
      DATABASE_URL: "${DB_URL:?err}"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16
    restart: unless-stopped
    container_name: fd-postgres
    environment:
      POSTGRES_USER: "${DB_USER:?err}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:?err}"
      POSTGRES_DB: "${DB_NAME:?err}"
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_PASSWORD}"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 60s
